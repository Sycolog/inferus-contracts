type NameEntity @entity {
  id: ID!
  name: String!
  metadataUri: String!
  owner: NameOwnerEntity
}

type NameOwnerEntity @entity {
  id: ID!
  address: Bytes!
  names: [NameEntity!]! @derivedFrom(field: "owner")
}

type NameTransferEntity @entity {
  "concatenation of name|from|to"
  id: ID!
  name: String!
  from: Bytes!
  to: Bytes!
  isCompleted: Boolean!
}

type SubscriptionPlanEntity @entity {
  id: ID!
  "The address that manages the plan"
  owner: Bytes!
  "null indicates coin"
  token: Bytes
  price: BigInt!
  duration: BigInt!
  active: Boolean!
  subscriptions: [SubscriptionEntity!]! @derivedFrom(field: "plan")
  withdrawals: [WithdrawalEntity!]! @derivedFrom(field: "plan")
}

type SubscriptionEntity @entity {
  id: ID!
  expiry: BigInt!
  subscriber: SubscriberEntity!
  plan: SubscriptionPlanEntity!
}

type SubscriberEntity @entity {
  id: ID!
  address: Bytes!
  subscriptions: [SubscriptionEntity!]! @derivedFrom(field: "subscriber")
}

type WithdrawalEntity @entity {
  id: ID!
  token: Bytes!
  amount: BigInt!
  withdrawer: Bytes!
  receiver: Bytes!
  plan: SubscriptionPlanEntity!
}
